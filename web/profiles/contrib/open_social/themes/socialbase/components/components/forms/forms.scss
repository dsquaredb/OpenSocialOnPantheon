@import 'init';

@import 'contrib/bootstrap/forms';

label {
  font-weight: 300;
}

form {
  &.card-nested-section {
    margin: 0;
    padding: 0;
    background: transparent;
    &:last-child {
      margin-bottom: 0;
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }
  }
}

.form-group {
  position: relative;
}

.form-group label {
  font-size: 0.875rem;
  cursor: text;
}

.form-group-inline {

  @include MQ($small) {
    display: flex;
    align-items: flex-start;

    .form-group {
      margin-bottom: 0;
    }

    .form-item {
      flex: 1;
    }

    .btn {
      margin-left: 8px;

      // Safari fix
      flex-shrink: 0;
    }

  }

}


.form-no-label label + .form-required {
  display: none;
}

// Indication on labels for required fields
span.form-required {
  margin: 0 3px;
  color: $brand-danger;
}

.help-block {
  font-size: 0.75rem;
  color: $help-block;

  .radio & {
    padding-left: $radio-width;
    max-width: none;
    margin-top: 0;
  }
}

.form-control {
  border: 1px solid $input-border;
  box-shadow: none;
  max-width: $form-control-max-width;
  appearance: none;
  font-size: inherit;

  @media screen and (-webkit-min-device-pixel-ratio:0) {
    font-size: $font-size-base;
  }

  @include MQ($medium) {
    font-size: $font-size-base;
  }

  &:focus {
    border-bottom: 1px solid $brand-primary;
    box-shadow: 0 2px 0 0 $brand-primary;
  }

}

.form-control--autogrow {
  overflow: hidden;
  resize: none;
  max-width: none;
}


.form-actions .btn {
  margin-bottom: 5px;
}


// ***************
// Selects
// ***************

// Browsers do not recognize pseudo :after selectors, we must create a wrapper
// around the select element to style it properly.
// @see http://stackoverflow.com/q/21103542
.select-wrapper {
  position: relative;
  width: 100%;
  max-width: $form-control-max-width;

  .form-inline & {
    width: auto;
  }

  .input-group & {
    display: table-cell;
    // Reset rounded corners
    &:first-child .form-control:first-child {
      @include border-left-radius($input-border-radius);
    }
    &:last-child .form-control:first-child {
      @include border-right-radius($input-border-radius);
    }
  }

  select {
    appearance: none;
    line-height: 1;
    padding-right: 20px;
  }

  &:after {
    content: 'â–¾';
    font-style: normal;
    font-weight: 400;
    line-height: 1;
    margin-top: -.5em;
    padding-right: 12px;
    pointer-events: none;
    position: absolute;
    right: 0;
    top: 50%;
    z-index: 10;

    .has-error & {
      color: $state-danger-text;
    }
    .has-success & {
      color: $state-success-text;
    }
    .has-warning & {
      color: $state-warning-text;
    }

  }

}

// ***************
// Radio Buttons
// ***************

.radio,
.checkbox {
  margin-top: 0;
  margin-bottom: 5px;
}

/* Remove default Radio Buttons */
[type="radio"]:not(:checked),
[type="radio"]:checked,
[type="checkbox"]:not(:checked),
[type="checkbox"]:checked {
  position: absolute;
  left: -9999px;
  opacity: 0;
}

[type="radio"], [type="checkbox"] {
  .form-no-label.checkbox & {
    opacity: 1;
    left: 0;
    margin: 0;
    position: static;
  }
}

.checkbox label,
.radio label {
  font-weight: 300;
  position: relative;
  padding-left: $radio-width;
  cursor: pointer;
  display: inline-block;
  line-height: 21px;
  font-size: 1em;
  transition: .28s ease;
  user-select: none;
}

[type="radio"]:checked + label {
  color: $radio-fill-color;
}

.radio label:before,
.radio label:after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  margin: 2px;
  width: 16px;
  height: 16px;
  z-index: 0;
  transition: .28s ease;
}

/* Unchecked styles */
[type="radio"]:not(:checked) + label:before {
  border-radius: 50%;
  border: 2px solid $radio-empty-color;
}

[type="radio"]:not(:checked) + label:after {
  border-radius: 50%;
  border: 2px solid $radio-empty-color;
  z-index: -1;
  transform: scale(0);
}

/* Checked styles */
[type="radio"]:checked + label:before {
  border-radius: 50%;
  border: 2px solid $radio-fill-color;
}

[type="radio"]:checked + label:after {
  border-radius: 50%;
  border: 2px solid $radio-fill-color;
  background-color: $radio-fill-color;
  z-index: 0;
  transform: scale(.5);
}

/* Disabled style */

[type="radio"]:disabled + label:before,
[type="radio"]:disabled + label:before {
  background-color: transparent;
}

[type="radio"]:disabled:checked + label:before {
  border: 2px solid $input-disabled-color;
}

[type="radio"]:disabled + label {
  color: $input-disabled-color;
}

[type="radio"]:disabled:not(:checked) + label:before {
  border-color: $input-disabled-color;
}

[type="radio"]:disabled:checked + label:after {
  background-color: $input-disabled-color;
  border: none;
  background-color: $input-disabled-color;
}

[type="radio"]:focus + label:before {
  box-shadow: 0 0 3px 2px lighten($brand-primary, 10%);
}

[type="checkbox"] {
  // General
  + label:after {
    border-radius: 2px;
  }
  + label:before,
  + label:after {
    content: '';
    left: 0;
    position: absolute;
    /* .1s delay is for check animation */
    transition: border .25s, background-color .25s, width .20s .1s, height .20s .1s, top .20s .1s, left .20s .1s;
    z-index: 1;
  }

  // Unchecked style
  &:not(:checked) + label:before {
    width: 0;
     height: 0;
     border: 3px solid transparent;
     left: 6px;
     top: 10px;

     -webkit-transform: rotateZ(37deg);
             transform: rotateZ(37deg);
     -webkit-transform-origin: 20% 40%;
             transform-origin: 100% 100%;
  }

  &:not(:checked) + label:after {
    height: 20px;
    width: 20px;
    background-color: transparent;
    border: 2px solid $radio-empty-color;
    top: 0px;
    z-index: 0;
  }



  // Checked style
  &:checked {
    + label:before {
      top: 0;
      left: 1px;
      width: 8px;
      height: 13px;
      border-top: 2px solid transparent;
      border-left: 2px solid transparent;
      border-right: 2px solid $input-bg-color;
      border-bottom: 2px solid $input-bg-color;
      transform: rotateZ(37deg);
      margin-top: 2px;
      transition: .2s;
      transform-origin: 100% 100%;
    }

    + label:after {
      top: 0px;
      width: 20px;
      height: 20px;
      border: 2px solid $brand-primary-dark;
      background-color: $brand-primary-dark;
      z-index: 0;
    }
  }

  // Focused styles
  &.tabbed:focus + label:after {
    border-radius: 2px;
    border-color: $radio-empty-color;
    background-color: rgba(0,0,0,.1);
  }
  &.tabbed:checked:focus + label:after {
    border-radius: 2px;
    background-color: $brand-primary-dark;
    border-color: $brand-primary-dark;
  }

  // Disabled style
  &:disabled:not(:checked) + label:before {
    background-color: transparent;
    border: 2px solid transparent;
  }

  &:disabled:not(:checked) + label:after {
    border-color: transparent;
    background-color: $input-disabled-solid-color;
  }

  &:disabled:checked + label:before {
    background-color: transparent;
  }

  &:disabled:checked + label:after {
    background-color: $input-disabled-solid-color;
    border-color: $input-disabled-solid-color;
  }
}


.form-inline {
  margin-bottom: $form-group-margin-bottom;

  @include MQ($small) {

    .radio input[type="radio"],
    .checkbox input[type="checkbox"] {
      position: absolute;
    }

    .radio label,
    .checkbox label {
      padding-left: ($radio-width - 3);
      margin-right: $radio-width;
    }

  }

}

// Special styles for iOS temporal inputs
//
// In Mobile Safari, setting `display: block` on temporal inputs causes the
// text within the input to become vertically misaligned. As a workaround, we
// set a pixel line-height that matches the given height of the input, but only
// for Safari. See https://bugs.webkit.org/show_bug.cgi?id=139848
//

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  input[type="date"],
  input[type="time"],
  input[type="datetime-local"],
  input[type="month"] {
    &.form-control {
      line-height: $line-height-computed;
    }

    &.input-sm,
    .input-group-sm & {
      line-height: floor($font-size-small * $line-height-small);
    }

    &.input-lg,
    .input-group-lg & {
      line-height: ceil($font-size-large * $line-height-large);
    }
  }
}


// ***************
// ckeditor
// ***************

.textarea--cke .cke {
  position: relative;
}

// ***************
// Managed file input
// ***************

.form-managed-file {
  font-size: 0.875rem;
}

@import "switch";
@import "password";
@import "autocomplete";
